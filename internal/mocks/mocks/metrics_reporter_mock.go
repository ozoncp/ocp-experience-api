// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ozoncp/ocp-experience-api/internal/metrics (interfaces: Reporter)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockReporter is a mock of Reporter interface.
type MockReporter struct {
	ctrl     *gomock.Controller
	recorder *MockReporterMockRecorder
}

// MockReporterMockRecorder is the mock recorder for MockReporter.
type MockReporterMockRecorder struct {
	mock *MockReporter
}

// NewMockReporter creates a new mock instance.
func NewMockReporter(ctrl *gomock.Controller) *MockReporter {
	mock := &MockReporter{ctrl: ctrl}
	mock.recorder = &MockReporterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReporter) EXPECT() *MockReporterMockRecorder {
	return m.recorder
}

// IncCreate mocks base method.
func (m *MockReporter) IncCreate(arg0 uint, arg1 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "IncCreate", arg0, arg1)
}

// IncCreate indicates an expected call of IncCreate.
func (mr *MockReporterMockRecorder) IncCreate(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncCreate", reflect.TypeOf((*MockReporter)(nil).IncCreate), arg0, arg1)
}

// IncList mocks base method.
func (m *MockReporter) IncList(arg0 uint, arg1 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "IncList", arg0, arg1)
}

// IncList indicates an expected call of IncList.
func (mr *MockReporterMockRecorder) IncList(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncList", reflect.TypeOf((*MockReporter)(nil).IncList), arg0, arg1)
}

// IncRead mocks base method.
func (m *MockReporter) IncRead(arg0 uint, arg1 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "IncRead", arg0, arg1)
}

// IncRead indicates an expected call of IncRead.
func (mr *MockReporterMockRecorder) IncRead(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncRead", reflect.TypeOf((*MockReporter)(nil).IncRead), arg0, arg1)
}

// IncRemove mocks base method.
func (m *MockReporter) IncRemove(arg0 uint, arg1 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "IncRemove", arg0, arg1)
}

// IncRemove indicates an expected call of IncRemove.
func (mr *MockReporterMockRecorder) IncRemove(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncRemove", reflect.TypeOf((*MockReporter)(nil).IncRemove), arg0, arg1)
}

// IncUpdate mocks base method.
func (m *MockReporter) IncUpdate(arg0 uint, arg1 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "IncUpdate", arg0, arg1)
}

// IncUpdate indicates an expected call of IncUpdate.
func (mr *MockReporterMockRecorder) IncUpdate(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncUpdate", reflect.TypeOf((*MockReporter)(nil).IncUpdate), arg0, arg1)
}
